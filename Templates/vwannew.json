{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "skLocation": {
        "type": "string",
        "metadata": {
          "displayName": "Azure Location Smurfit Kappa",
          "description": "Provide the Smurfit Kappa abbriviation for the Azure location where this CMP will be deployed."
        },
        "defaultValue": "euw"
      },
      "environment": {
        "type": "string",
        "metadata": {
          "description": "Provide the environment this resource will use."
        },
        "defaultValue": "prd"
      },
      "sharedVPNkey": {
        "type": "securestring",
        "metadata": {
          "description": "Specifies the shared key for the Vpn connection."
        }
      },
      "SiteID1": {
        "type": "string",
        "metadata": {
          "description": "provide the site abbreviation code"
        },
        "defaultValue": "rtm"
      },
      "SiteID2": {
        "type": "string",
        "metadata": {
          "description": "provide the site abbreviation code"
        },
        "defaultValue": "nwg"
      },
      "owner": {
        "type": "string",
        "metadata": {
          "displayName": "Mail Address Owner",
          "description": "Provide the mail address of the owner responsible for the Azure resources deployed with this blueprint."
        }
      },
      "skid": {
        "type": "string",
        "metadata": {
          "displayName": "Smurfit Kappa ID (SKID)",
          "description": "Provide the Smurfit Kappa ID of the cost center for these resources."
        }
      },
      "skuVPN": {
        "type": "string",
        "metadata": {
          "description": "Provide the SKU for the HUB gateway, 1=500 mbpsx2, 2=1GBPSx2, 3=1.5GBPSx2, 4=2GBPSx2 etc."
        },
        "defaultValue": "1"
      },
      "localAsn1": {
        "type": "int",
        "defaultValue": 65432
      },
      "localAsn2": {
        "type": "int",
        "defaultValue": 65432
      },
      "vwanHubIpAddressSpace": {
        "type": "string",
        "metadata": {
          "description": "Provide a /24 subnet ip address range for the vwan Hub."
        }
      },
      "localBGPpeerIP": {
        "type": "string",
        "defaultValue": "10.10.10.10"
      },
      "localBGPpeerIP2": {
        "type": "string",
        "defaultValue": "10.20.20.20"
      },
      "localVPNdeviceIP": {
        "type": "string",
        "defaultValue": "1.1.1.1"
      },
      "localVPNdeviceIP2": {
        "type": "string",
        "defaultValue": "2.2.2.2"
      },
      "logAnalyticsAccount": {
        "type": "string",
        "defaultValue": "sk-euw-gmcc-prd-monitor001"
      }
    },
    "functions": [],
    "variables": {
      "department": "gmcc",
      "departmentitsc": "itsc",
      "buildingBlockcmp": "cmp",
      "buildingBlockAVDC": "avdc",
      "buildingBlockcip": "cip",
      "exposition": "internal",
      "dataClassification": "I",
      "virtualWANName": "[concat(variables('buildingBlockcmp'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('department'),'-vwan')]",
      "virtualHUBName": "[concat(variables('buildingBlockcmp'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('department'),'-vwanhub')]",
      "virtualGatewayName": "[concat(variables('buildingBlockcmp'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('department'),'-virtualgw')]",
      "virtualGatewaySiteName1": "[concat(variables('buildingBlockcmp'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('department'),'-',parameters('SiteID1'))]",
      "virtualGatewaySiteName2": "[concat(variables('buildingBlockcmp'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('department'),'-',parameters('SiteID2'))]",
      "fwpolName": "[concat(variables('buildingBlockcmp'),'-',parameters('skLocation'),'-',parameters('environment'),'-',variables('department'),'-fwpol')]",
      "fwname": "[concat(variables('buildingBlockcmp'),'-',parameters('skLocation'),'-',parameters('environment'),'-',variables('department'),'-fw')]",
      "vnetName_CMP": "[concat(variables('buildingBlockcmp'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('department'),'-vnet')]",
      "vnetName_avdc_gmcc": "[concat(variables('buildingBlockAVDC'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('departmentitsc'),'-vnet')]",
      "vnetName_CIP": "[concat(variables('buildingBlockcip'),'-',parameters('SKlocation'),'-',parameters('environment'),'-',variables('departmentitsc'),'-vnet')]",
      "vpnsitelink1": "[concat(variables('virtualGatewaySiteName1'), '-link1')]",
      "vpnsitelink2": "[concat(variables('virtualGatewaySiteName2'), '-link1')]",
      "VPNGatewayConnection1": "[concat(variables('virtualGatewayName'),'/', parameters('SiteID1'))]",
      "VPNGatewayConnection2": "[concat(variables('virtualGatewayName'),'/', parameters('SiteID2'))]",
      "CMPtoHubConnection": "[format('{0}/{1}_connection', variables('virtualHUBName'), variables('vnetName_CMP'))]",
      "AVDCtoHubConnection": "[format('{0}/{1}_connection', variables('virtualHUBName'), variables('vnetName_avdc_gmcc'))]",
      "CIPtoHubConnection": "[format('{0}/{1}_connection', variables('virtualHUBName'), variables('vnetName_CIP'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Network/azureFirewalls",
        "apiVersion": "2020-06-01",
        "name": "[variables('fwname')]",
        "tags": {
          "global-skid": "[parameters('skid')]",
          "global-exposition": "[variables('exposition')]",
          "global-data-classification": "[variables('dataClassification')]",
          "global-environment": "[parameters('environment')]",
          "global-owner": "[parameters('owner')]"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualHubs', variables('virtualHUBName'))]",
          "[resourceId('Microsoft.Network/vpnGateways', variables('virtualGatewayName'))]"
        ],
        "properties": {
          "sku": {
            "name": "AZFW_Hub",
            "tier": "Standard"
          },
          "hubIPAddresses": {
            "publicIPs": {
              "count": 1
            }
          },
          "virtualHub": {
            "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtualHUBName'))]"
          },
          "firewallPolicy": {
            "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('fwpolName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
        "name": "[concat(variables('fwname'), '/Microsoft.Insights/', 'cmp-euw-prd-gmcc-fw')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/azureFirewalls',variables('fwname'))]"
        ],
        "apiVersion": "2017-05-01-preview",
        "properties": {
          "name": "DiagService",
          "storageAccountId": null,
          "eventHubAuthorizationRuleId": null,
          "eventHubName": null,
          "workspaceId": "[resourceid('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsAccount'))]",
          "logs": [
            {
              "category": "AzureFirewallApplicationRule",
              "enabled": true,
              "retentionPolicy": {
                "days": 60,
                "enabled": true
              }
            },
            {
              "category": "AzureFirewallNetworkRule",
              "enabled": true,
              "retentionPolicy": {
                "days": 60,
                "enabled": true
              }
            }
          ],
          "metrics": [
            {
              "category": "AllMetrics",
              "enabled": true,
              "retentionPolicy": {
                "enabled": true,
                "days": 31
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualWans",
        "apiVersion": "2019-09-01",
        "location": "[resourceGroup().location]",
        "name": "[variables('virtualWANName')]",
        "tags": {
          "global-skid": "[parameters('skid')]",
          "global-exposition": "[variables('exposition')]",
          "global-data-classification": "[variables('dataClassification')]",
          "global-environment": "[parameters('environment')]",
          "global-owner": "[parameters('owner')]"
        },
        "properties": {
          "virtualHubs": [],
          "vpnSites": [],
          "type": "Standard",
          "allowVnetToVnetTraffic": true,
          "allowBranchToBranchTraffic": true
        }
      },
      {
        "type": "Microsoft.Network/virtualHubs",
        "apiVersion": "2019-09-01",
        "name": "[variables('virtualHUBName')]",
        "tags": {
          "global-skid": "[parameters('skid')]",
          "global-exposition": "[variables('exposition')]",
          "global-data-classification": "[variables('dataClassification')]",
          "global-environment": "[parameters('environment')]",
          "global-owner": "[parameters('owner')]"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualWans',variables('virtualWANName'))]"
        ],
        "properties": {
          "addressPrefix": "[parameters('vwanHubIpAddressSpace')]",
          "virtualWan": {
            "id": "[resourceId('Microsoft.Network/virtualWans', variables('virtualWANName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/virtualHubs/hubRouteTables",
        "apiVersion": "2020-05-01",
        "name": "[concat(variables('virtualHUBName'),'/defaultRouteTable')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualHubs',variables('virtualHUBName'))]",
          "[resourceId('Microsoft.Network/azureFirewalls',variables('fwname'))]"
        ],
        "location": "[resourceGroup().location]",
        "properties": {
          "routes": [
            {
              "name": "all_trafic",
              "destinationType": "CIDR",
              "destinations": [
                "10.0.0.0/8",
                "172.16.0.0/12",
                "192.168.0.0/16",
                "0.0.0.0/0"
              ],
              "nextHopType": "ResourceId",
              "nextHop": "[resourceId('Microsoft.Network/azureFirewalls', variables('fwname'))]"
            }
          ],
          "labels": [
            "default"
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
        "apiVersion": "2020-05-01",
        "name": "[variables('CMPtoHubConnection')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualHubs', variables('virtualHUBName'))]",
          "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]"
        ],
        "properties": {
          "routingConfiguration": {
            "associatedRouteTable": {
              "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]"
            },
            "propagatedRouteTables": {
              "labels": [
                "none"
              ],
              "ids": [
                {
                  "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'noneRouteTable')]"
                }
              ]
            }
          },
          "remoteVirtualNetwork": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_CMP'))]"
          },
          "allowHubToRemoteVnetTransit": true,
          "allowRemoteVnetToUseHubVnetGateways": true,
          "enableInternetSecurity": true
        }
      },
      {
        "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
        "apiVersion": "2020-05-01",
        "name": "[variables('AVDCtoHubConnection')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualHubs', variables('virtualHUBName'))]",
          "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]",
          "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', split(format('{0}/{1}_connection', variables('virtualHUBName'), variables('vnetName_CMP')), '/')[0], split(format('{0}/{1}_connection', variables('virtualHUBName'), variables('vnetName_CMP')), '/')[1])]"
        ],
        "properties": {
          "routingConfiguration": {
            "associatedRouteTable": {
              "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]"
            },
            "propagatedRouteTables": {
              "labels": [
                "none"
              ],
              "ids": [
                {
                  "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'noneRouteTable')]"
                }
              ]
            }
          },
          "remoteVirtualNetwork": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_avdc_gmcc'))]"
          },
          "allowHubToRemoteVnetTransit": true,
          "allowRemoteVnetToUseHubVnetGateways": true,
          "enableInternetSecurity": true
        }
      },
      {
        "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
        "apiVersion": "2020-05-01",
        "name": "[variables('CIPtoHubConnection')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualHubs', variables('virtualHUBName'))]",
          "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]",
          "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', split(format('{0}/{1}_connection', variables('virtualHUBName'), variables('vnetName_avdc_gmcc')), '/')[0], split(format('{0}/{1}_connection', variables('virtualHUBName'), variables('vnetName_avdc_gmcc')), '/')[1])]"
        ],
        "properties": {
          "routingConfiguration": {
            "associatedRouteTable": {
              "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]"
            },
            "propagatedRouteTables": {
              "labels": [
                "none"
              ],
              "ids": [
                {
                  "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'noneRouteTable')]"
                }
              ]
            }
          },
          "remoteVirtualNetwork": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_CIP'))]"
          },
          "allowHubToRemoteVnetTransit": true,
          "allowRemoteVnetToUseHubVnetGateways": true,
          "enableInternetSecurity": true
        }
      },
      {
        "type": "Microsoft.Network/vpnSites",
        "name": "[variables('virtualGatewaySiteName1')]",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualWans',variables('virtualWANName'))]"
        ],
        "properties": {
          "deviceProperties": {
            "deviceVendor": "Microsoft",
            "deviceModel": "AzureVPNGateway",
            "linkSpeedInMbps": 500
          },
          "vpnSiteLinks": [
            {
              "name": "[variables('vpnsitelink1')]",
              "properties": {
                "bgpProperties": {
                  "asn": "[parameters('localAsn1')]",
                  "bgpPeeringAddress": "[parameters('localBGPpeerIP')]"
                },
                "linkProperties": {
                  "linkProviderName": "Azure",
                  "linkSpeedInMbps": 500
                },
                "ipAddress": "[parameters('localVPNdeviceIP')]"
              }
            }
          ],
          "virtualWan": {
            "id": "[resourceId('Microsoft.Network/virtualWans', variables('virtualWANName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/vpnSites",
        "name": "[variables('virtualGatewaySiteName2')]",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualWans',variables('virtualWANName'))]"
        ],
        "properties": {
          "deviceProperties": {
            "deviceVendor": "Microsoft",
            "deviceModel": "AzureVPNGateway",
            "linkSpeedInMbps": 500
          },
          "vpnSiteLinks": [
            {
              "name": "[variables('vpnsitelink2')]",
              "properties": {
                "bgpProperties": {
                  "asn": "[parameters('localAsn2')]",
                  "bgpPeeringAddress": "[parameters('localBGPpeerIP2')]"
                },
                "linkProperties": {
                  "linkProviderName": "Azure",
                  "linkSpeedInMbps": 500
                },
                "ipAddress": "[parameters('localVPNdeviceIP2')]"
              }
            }
          ],
          "virtualWan": {
            "id": "[resourceId('Microsoft.Network/virtualWans', variables('virtualWANName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/vpnGateways",
        "name": "[variables('virtualGatewayName')]",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualHubs', variables('virtualHUBName'))]"
        ],
        "properties": {
          "vpnGatewayScaleUnit": "[parameters('skuVPN')]",
          "virtualHub": {
            "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtualHUBName'))]"
          },
          "bgpSettings": {
            "asn": 65515
          }
        },
        "resources": [
          {
            "type": "Microsoft.Network/vpnGateways/vpnConnections",
            "apiVersion": "2020-05-01",
            "name": "[variables('VPNGatewayConnection1')]",
            "dependsOn": [
              "[resourceId('Microsoft.Network/vpnGateways', variables('virtualGatewayName'))]",
              "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]"
            ],
            "properties": {
              "remoteVpnSite": {
                "id": "[resourceId('Microsoft.Network/vpnSites', variables('virtualGatewaySiteName1'))]"
              },
              "vpnLinkConnections": [
                {
                  "name": "[variables('vpnsitelink1')]",
                  "properties": {
                    "vpnSiteLink": {
                      "id": "[resourceId('Microsoft.Network/vpnSites/vpnSiteLinks', variables('virtualGatewaySiteName1'), variables('vpnsitelink1'))]"
                    },
                    "enableBgp": true,
                    "sharedKey": "[parameters('sharedVPNkey')]"
                  }
                }
              ],
              "routingConfiguration": {
                "associatedRouteTable": {
                  "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]"
                },
                "propagatedRouteTables": {
                  "labels": [
                    "none"
                  ],
                  "ids": [
                    {
                      "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'noneRouteTable')]"
                    }
                  ]
                }
              }
            }
          },
          {
            "type": "Microsoft.Network/vpnGateways/vpnConnections",
            "apiVersion": "2020-05-01",
            "name": "[variables('VPNGatewayConnection2')]",
            "dependsOn": [
              "[resourceId('Microsoft.Network/vpnGateways', variables('virtualGatewayName'))]",
              "[resourceId('Microsoft.Network/vpnGateways/vpnConnections', split(variables('VPNGatewayConnection1'), '/')[0], split(variables('VPNGatewayConnection1'), '/')[1])]"
            ],
            "properties": {
              "remoteVpnSite": {
                "id": "[resourceId('Microsoft.Network/vpnSites', variables('virtualGatewaySiteName2'))]"
              },
              "vpnLinkConnections": [
                {
                  "name": "[variables('vpnsitelink2')]",
                  "properties": {
                    "vpnSiteLink": {
                      "id": "[resourceId('Microsoft.Network/vpnSites/vpnSiteLinks', variables('virtualGatewaySiteName2'), variables('vpnsitelink2'))]"
                    },
                    "enableBgp": true,
                    "sharedKey": "[parameters('sharedVPNkey')]"
                  }
                }
              ],
              "routingConfiguration": {
                "associatedRouteTable": {
                  "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'defaultRouteTable')]"
                },
                "propagatedRouteTables": {
                  "labels": [
                    "none"
                  ],
                  "ids": [
                    {
                      "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtualHUBName'), 'noneRouteTable')]"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "type": "Microsoft.Insights/metricAlerts",
        "apiVersion": "2018-03-01",
        "name": "[concat('Bandwidth usage Virtual Gateway','-', parameters('skLocation'))]",
        "location": "global",
        "dependsOn": [
          "[resourceId('Microsoft.Network/vpnGateways', variables('virtualGatewayName'))]"
        ],
        "properties": {
          "evaluationFrequency": "PT15M",
          "windowSize": "PT15M",
          "severity": 1,
          "enabled": true,
          "scopes": [
            "[resourceId('Microsoft.Network/vpnGateways', variables('virtualGatewayName'))]"
          ],
          "criteria": {
            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
            "allOf": [
              {
                "threshold": 480000000,
                "name": "Metric1",
                "metricNamespace": "Microsoft.Network/vpnGateways",
                "metricName": "TunnelAverageBandwidth",
                "dimensions": [
                  {
                    "name": "ConnectionName",
                    "operator": "Include",
                    "values": [
                      "[variables('vpnsitelink1')]",
                      "[variables('vpnsitelink2')]"
                    ]
                  }
                ],
                "operator": "GreaterThan",
                "timeAggregation": "Average",
                "criterionType": "StaticThresholdCriterion"
              }
            ],
            "actions": [
              {
                "actionGroupId": "[resourceId('microsoft.insights/actionGroups', 'cloud administrators')]"
              }
            ]
          }
        }
      }
    ]
  }
  